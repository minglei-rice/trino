stages:
  - test
  - package
  - build
  - build_docker
  - build_artifactory

variables:
  # 默认镜像仓库hub.bilibili.co/gitlab, 如果有多个其它的仓库，请以分号分隔符号分隔，
  # 且字符中不能包含空白符，如"repo1;repo2"
  DOCKER_REPOSITORIES: "hub.bilibili.co/gitlab"
  # rider项目名（服务树路径）
  RIDER_PROJECT_NAME: datacenter.olap.trino
  # 构建产物保存（如构建产物在根目录下面的./dist/目录，则此处paths填写 - ./dist/）
  DOCKER_ARTIFACTS_PATH : ./release
  SERVER_ARTIFACTS_PATH: ./core/trino-server/target
  CLIENT_ARTIFACTS_PATH: ./client/trino-cli/target

test:
  stage: test
  resource_group: ci
  script:
    - export PATH=$PATH:$JAVA_HOME/bin:/opt/maven/apache-maven-3.8.1/bin
    - ./mvnw -pl -docs clean install -DskipTests -Djava.io.tmpdir=/data
    - ./mvnw -pl -plugin/trino-pinot,-plugin/trino-phoenix,-plugin/trino-redshift,-testing/trino-test-jdbc-compatibility-old-server,-plugin/trino-redis,-plugin/trino-kudu,-plugin/trino-mongodb,-plugin/trino-oracle,-plugin/trino-phoenix5,-plugin/trino-postgresql,-plugin/trino-sqlserver,-plugin/trino-teradata-functions,-plugin/trino-accumulo,-plugin/trino-druid,-plugin/trino-atop,-plugin/trino-bigquery,-plugin/trino-cassandra,-plugin/trino-kafka,-testing/trino-testing-kafka,-plugin/trino-memsql,-plugin/trino-kinesis,-plugin/trino-geospatial,-plugin/trino-accumulo-iterators,-plugin/trino-prometheus,-plugin/trino-elasticsearch,-plugin/trino-google-sheets,-core/trino-server-rpm,-docs verify -Djava.io.tmpdir=/data
  only:
    - merge_requests
    - branches

package:
  stage: package
  resource_group: ci
  script:
    - export PATH=$PATH:$JAVA_HOME/bin:/opt/maven/apache-maven-3.8.1/bin
    - ./mvnw -pl -docs clean package -DskipTests -Djava.io.tmpdir=/data
    - ./mvnw deploy -pl client/trino-jdbc,core/trino-main -am -DskipTests -Djava.io.tmpdir=/data
    - mv ./core/trino-server/target/trino-server-*.tar.gz $SERVER_ARTIFACTS_PATH/trino-server.tar.gz
    - mv ./client/trino-cli/target/trino-cli-*-executable.jar $CLIENT_ARTIFACTS_PATH/trino-cli-executable.jar
  only:
    - tags
    - branches
  artifacts:
    paths:
      - $SERVER_ARTIFACTS_PATH/trino-server.tar.gz
      - $CLIENT_ARTIFACTS_PATH/trino-cli-executable.jar
    expire_in: 2 week

build:
  stage: build
  tags:
    - rider-shared
  # 构建需要用到的docker镜像，默认是通过Dockerfile.kerberos构建的基础镜像
  image: hub.bilibili.co/compile/java11-compile:latest
  script:
  # 自定义构建命令
    - echo "Building docker..."
    - mkdir release && touch release/built_time.txt && echo `date +%Y-%m-%d%T` >> release/built_time.txt
    - tar -zcf docker.tar.gz docker/
    - cp -r $SERVER_ARTIFACTS_PATH/* $CLIENT_ARTIFACTS_PATH/* docker.tar.gz release/
  only:
    - branches
    - tags
#   when: manual
#   after_script:
#     - git tag -l | xargs git tag -d
  artifacts:
    paths:
      - $DOCKER_ARTIFACTS_PATH
    expire_in: 2 week

build_docker:
  stage: build_docker
  tags:
    - rider-shared-shell
  script:
    - export DOCKER_BUILD_TAG=$CI_COMMIT_SHA
    - export DOCKER_BUILD_NAME=$RIDER_PROJECT_NAME:$DOCKER_BUILD_TAG
    - docker build --pull -t $DOCKER_BUILD_NAME .
    - if [ "$CI_COMMIT_BRANCH" != "" ]; then export DOCKER_TAG=$CI_COMMIT_BRANCH; fi
    - if [ "$CI_COMMIT_TAG" != "" ]; then export DOCKER_TAG=$CI_COMMIT_TAG; fi
    # rename and push
    - for repo in ${DOCKER_REPOSITORIES//;/ }; do export DOCKER_FULL_NAME=$repo/$RIDER_PROJECT_NAME:$DOCKER_TAG; docker tag $DOCKER_BUILD_NAME $DOCKER_FULL_NAME; echo "Renamed docker image from $DOCKER_BUILD_NAME to $DOCKER_FULL_NAME"; docker push $DOCKER_FULL_NAME; python /home/gitlab-runner/rider.py $CI_JOB_ID $CI_COMMIT_REF_NAME $CI_COMMIT_SHA "$CI_COMMIT_MESSAGE" $GITLAB_USER_EMAIL $RIDER_PROJECT_NAME $DOCKER_FULL_NAME $DOCKER_TAG; done
  dependencies:
    - build
  only:
    - tags
    - branches

build_artifactory:
  stage: build_artifactory
  tags:
    - rider-shared-shell
  script:
    - "echo build-artifactory"
    # After packaging, the .git directory file is too large
    - mkdir -p ../$CI_PROJECT_ID && mv .git ../$CI_PROJECT_ID/
    - artifactory_path="`pwd`/$ARTIFACTS_PATH"
    - python /home/gitlab-runner/artifactory.py $CI_COMMIT_SHA $CI_COMMIT_REF_NAME $CI_PROJECT_URL "$CI_COMMIT_MESSAGE" "$GITLAB_USER_EMAIL" $artifactory_path $RIDER_PROJECT_NAME >> /home/gitlab-runner/artifactory.log
    - cat /home/gitlab-runner/artifactory.log
    - mv ../$CI_PROJECT_ID/.git .
  dependencies:
    - build
  only:
    - tags
    - branches
